import React, { useState, useEffect } from 'react';
import { supabase } from '../../../../supabaseClient';
import { useNavigate } from 'react-router-dom';
import './TelaUsuarios.css';

// Importa√ß√£o dos formul√°rios usados em diferentes abas
import FormularioOrdensServico from './FormularioOrdensServico';
import FormularioDoacaoEquipamento from './FormularioDoacaoEquipamento';

// Importa√ß√£o dos √≠cones usados na interface
import { 
  FaHome, 
  FaClipboardList, 
  FaClipboardCheck,  // novo √≠cone para ‚ÄúAcompanhamento OS‚Äù
  FaSignOutAlt, 
  FaBars, 
  FaMapMarkerAlt,
  FaHeart
} from 'react-icons/fa';

const TelaUsuarios = () => {
  // -----------------------------
  // ESTADOS GERAIS DO COMPONENTE
  // -----------------------------

  // Nome e endere√ßo do usu√°rio logado
  const [nomeUsuario, setNomeUsuario] = useState('');
  const [enderecoUsuario, setEnderecoUsuario] = useState(null);

  // Controle de carregamento e menu lateral
  const [loading, setLoading] = useState(true);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  // Aba atualmente selecionada (In√≠cio, Ordens, Acompanhamento, etc.)
  const [abaSelecionada, setAbaSelecionada] = useState('inicio');

  const navigate = useNavigate();

  // -----------------------------
  // BLOQUEIA SCROLL AO ABRIR MENU MOBILE
  // -----------------------------
  useEffect(() => {
    if (isMobileMenuOpen) {
      document.body.classList.add('no-scroll');
    } else {
      document.body.classList.remove('no-scroll');
    }

    // Limpeza ao desmontar o componente
    return () => {
      document.body.classList.remove('no-scroll');
    };
  }, [isMobileMenuOpen]);

  // Fun√ß√£o para abrir/fechar o menu mobile
  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  // -----------------------------
  // BUSCA DADOS DO USU√ÅRIO LOGADO
  // -----------------------------
  useEffect(() => {
    const buscarDadosUsuario = async () => {
      setLoading(true);

      // Obt√©m sess√£o atual do usu√°rio no Supabase
      const { data: { session } } = await supabase.auth.getSession();

      // Se n√£o houver sess√£o, redireciona para cadastro/login
      if (!session) {
        navigate('/cadastro');
        return;
      }

      const userId = session.user.id;

      // Busca informa√ß√µes complementares do usu√°rio (nome e endere√ßo)
      const { data, error } = await supabase
        .from('usuarios')
        .select('nome_completo, endereco, numero_casa, bairro, cidade, estado, cep')
        .eq('id_usuario', userId)
        .single();

      if (error) {
        console.error('Erro ao buscar dados do usu√°rio:', error);
        setNomeUsuario('Usu√°rio');
      } else if (data) {
        setNomeUsuario(data.nome_completo);
        setEnderecoUsuario({
          endereco: data.endereco,
          numero: data.numero_casa,
          bairro: data.bairro,
          cidade: data.cidade,
          estado: data.estado,
          cep: data.cep
        });
      }

      setLoading(false);
    };

    buscarDadosUsuario();
  }, [navigate]);

  // -----------------------------
  // LOGOUT DO USU√ÅRIO
  // -----------------------------
  const handleLogout = async () => {
    await supabase.auth.signOut();
    navigate('/'); // volta para tela inicial
  };

  // -----------------------------
  // COMPONENTES DE PERFIL (USU√ÅRIO OU CARREGANDO)
  // -----------------------------
  const LoadingProfile = () => (
    <div className="user-info">
      <div className="foto-placeholder loading"></div>
      <p className="nome-usuario loading"></p>
    </div>
  );

  const UserProfile = () => (
    <div className="user-info">
      {/* Exibe apenas a inicial do nome do usu√°rio */}
      <div className="avatar">{nomeUsuario.charAt(0)}</div>
      <h2>{nomeUsuario}</h2>
      <p>√Årea do Cliente</p>
    </div>
  );

  // -------------------------------------------------------------
  // ITENS DE NAVEGA√á√ÉO (MENU) BARRA INFERIOR EXIBIDA E LATERAL
  // -------------------------------------------------------------
  const navItems = (
    <>
      <li onClick={() => { setAbaSelecionada('inicio'); setIsMobileMenuOpen(false); }} className={abaSelecionada === 'inicio' ? 'active' : ''}>
        <FaHome /> <span>In√≠cio</span>
      </li>

      <li onClick={() => { setAbaSelecionada('ordens'); setIsMobileMenuOpen(false); }} className={abaSelecionada === 'ordens' ? 'active' : ''}>
        <FaClipboardList /> <span>Ordem de Servi√ßo</span>
      </li>

      {/* Acompanhamento de OS sigla orden de servi√ßo*/}
      <li onClick={() => { setAbaSelecionada('acompanhamento'); setIsMobileMenuOpen(false); }} className={abaSelecionada === 'acompanhamento' ? 'active' : ''}>
        <FaClipboardCheck /> <span>Status OS</span>
      </li>

   
      <li onClick={() => { setAbaSelecionada('endereco'); setIsMobileMenuOpen(false); }} className={abaSelecionada === 'endereco' ? 'active' : ''}>
        <FaMapMarkerAlt /> <span>Endere√ßo</span>
      </li>

      <li onClick={() => { setAbaSelecionada('doacao'); setIsMobileMenuOpen(false); }} className={abaSelecionada === 'doacao' ? 'active' : ''}>
        <FaHeart /> <span>Doar Equipamento</span>
      </li>
    </>
  );

  // -----------------------------
  // CONTE√öDO PRINCIPAL DO DASHBOARD
  // -----------------------------
  return (
    <div className={`dashboard-wrapper ${isMobileMenuOpen ? 'mobile-menu-open' : ''}`}>
      
      {/* === SIDEBAR === */}
      <div className="sidebar">
        <div className="sidebar-content-wrapper">
          {loading ? <LoadingProfile /> : <UserProfile />}
          <nav className="sidebar-menu">
            <ul>{navItems}</ul>
          </nav>
        </div>

        <button className="logout-btn" onClick={handleLogout}>
          <FaSignOutAlt /> <span>Sair</span>
        </button>
      </div>

      {/* === PERFIL EM MODO MOBILE === */}
      <div className="mobile-profile-menu">
        <div className="sidebar-content-wrapper">
          {loading ? <LoadingProfile /> : <UserProfile />}
        </div>
        <button className="logout-btn" onClick={handleLogout}>
          <FaSignOutAlt /> <span>Sair</span>
        </button>
      </div>

      {/* === SOBREPOSI√á√ÉO QUANDO MENU MOBILE EST√Å ABERTO === */}
      {isMobileMenuOpen && <div className="overlay" onClick={toggleMobileMenu}></div>}

      {/* === CONTE√öDO DAS ABAS === */}
      <div className="dashboard-content">

        {/* ABA IN√çCIO */}
        {abaSelecionada === 'inicio' && (
          <>
            <h1>Painel do Cliente</h1>
            <section className="content-section">
              <h2>Bem-vindo ao seu Painel</h2>
              <p>Aqui voc√™ pode gerenciar suas ordens de servi√ßo, atualizar seu endere√ßo e fazer doa√ß√µes de equipamentos.</p>
              
              {/* Cards de atalhos r√°pidos */}
              <div className="dashboard-stats">
                <div className="stat-card">
                  <FaClipboardList className="stat-icon" />
                  <div className="stat-info">
                    <h3>Ordens de Servi√ßo</h3>
                    <p>Gerencie suas solicita√ß√µes</p>
                  </div>
                </div>
                
                <div className="stat-card">
                  <FaHeart className="stat-icon" />
                  <div className="stat-info">
                    <h3>Doa√ß√µes</h3>
                    <p>Doe equipamentos eletr√¥nicos</p>
                  </div>
                </div>
                
                <div className="stat-card">
                  <FaMapMarkerAlt className="stat-icon" />
                  <div className="stat-info">
                    <h3>Endere√ßo</h3>
                    <p>Mantenha seus dados atualizados</p>
                  </div>
                </div>
              </div>
            </section>
          </>
        )}

        {/* ABA ORDEM DE SERVI√áO */}
        {abaSelecionada === 'ordens' && (
          <>
            <h1>Ordem de Servi√ßo</h1>
            <FormularioOrdensServico />
          </>
        )}

        {/* üÜï ABA ACOMPANHAMENTO DE OS */}
        {abaSelecionada === 'acompanhamento' && (
          <>
            <h1>Acompanhamento de Ordens de Servi√ßo</h1>
            <section className="content-section">
              <p>Acompanhe aqui o andamento das suas ordens de servi√ßo abertas.</p>
              {/* ‚öôÔ∏è Aqui futuramente pode ser exibida a listagem real das OS */}
            </section>
          </>
        )}

        {/* ABA ENDERE√áO */}
        {abaSelecionada === 'endereco' && (
          <>
            <h1>Meu Endere√ßo</h1>
            <section className="content-section">
              {enderecoUsuario ? (
                <div className="endereco-info">
                  <p><strong>Endere√ßo:</strong> {enderecoUsuario.endereco}, {enderecoUsuario.numero}</p>
                  <p><strong>Bairro:</strong> {enderecoUsuario.bairro}</p>
                  <p><strong>Cidade:</strong> {enderecoUsuario.cidade} - {enderecoUsuario.estado}</p>
                  <p><strong>CEP:</strong> {enderecoUsuario.cep}</p>
                </div>
              ) : (
                <p className="sem-ordens">Endere√ßo n√£o encontrado.</p>
              )}
            </section>
          </>
        )}

        {/* ABA DOA√á√ÉO */}
        {abaSelecionada === 'doacao' && (
          <>
            <h1>Doa√ß√£o de Equipamento</h1>
            <FormularioDoacaoEquipamento />
          </>
        )}
      </div>

      {/* === MENU INFERIOR (VIS√çVEL NO MOBILE) === */}
      <nav className="bottom-nav">
        <ul>
          {navItems}
          <li onClick={toggleMobileMenu}>
            <FaBars /> <span>Menu</span>
          </li>
        </ul>
      </nav>
    </div>
  );
};

export default TelaUsuarios;
